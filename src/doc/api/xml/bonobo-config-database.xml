<refentry id="libbonobo-bonobo-config-database">
<refmeta>
<refentrytitle role="top_of_page" id="libbonobo-bonobo-config-database.top_of_page">bonobo-config-database</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-config-database</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libbonobo-bonobo-config-database.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="gchar">gchar</link> *             <link linkend="bonobo-config-get-string">bonobo_config_get_string</link>            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gchar">gchar</link> *             <link linkend="bonobo-config-get-string-with-default">bonobo_config_get_string_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gchar">gchar</link> *defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="gint16">gint16</link>              <link linkend="bonobo-config-get-short">bonobo_config_get_short</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gint16">gint16</link>              <link linkend="bonobo-config-get-short-with-default">bonobo_config_get_short_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint16">gint16</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="guint16">guint16</link>             <link linkend="bonobo-config-get-ushort">bonobo_config_get_ushort</link>            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="guint16">guint16</link>             <link linkend="bonobo-config-get-ushort-with-default">bonobo_config_get_ushort_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint16">guint16</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="gint32">gint32</link>              <link linkend="bonobo-config-get-long">bonobo_config_get_long</link>              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gint32">gint32</link>              <link linkend="bonobo-config-get-long-with-default">bonobo_config_get_long_with_default</link> (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint32">gint32</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="guint32">guint32</link>             <link linkend="bonobo-config-get-ulong">bonobo_config_get_ulong</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="guint32">guint32</link>             <link linkend="bonobo-config-get-ulong-with-default">bonobo_config_get_ulong_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint32">guint32</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="gfloat">gfloat</link>              <link linkend="bonobo-config-get-float">bonobo_config_get_float</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gfloat">gfloat</link>              <link linkend="bonobo-config-get-float-with-default">bonobo_config_get_float_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gfloat">gfloat</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="gdouble">gdouble</link>             <link linkend="bonobo-config-get-double">bonobo_config_get_double</link>            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gdouble">gdouble</link>             <link linkend="bonobo-config-get-double-with-default">bonobo_config_get_double_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gdouble">gdouble</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-config-get-boolean">bonobo_config_get_boolean</link>           (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-config-get-boolean-with-default">bonobo_config_get_boolean_with_default</link>
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gboolean">gboolean</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="gchar">gchar</link>               <link linkend="bonobo-config-get-char">bonobo_config_get_char</link>              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gchar">gchar</link>               <link linkend="bonobo-config-get-char-with-default">bonobo_config_get_char_with_default</link> (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gchar">gchar</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);
<link linkend="CORBA-any">CORBA_any</link> *         <link linkend="bonobo-config-get-value">bonobo_config_get_value</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-TypeCode">CORBA_TypeCode</link> opt_tc,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-string">bonobo_config_set_string</link>            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-short">bonobo_config_set_short</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint16">gint16</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-ushort">bonobo_config_set_ushort</link>            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint16">guint16</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-long">bonobo_config_set_long</link>              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint32">gint32</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-ulong">bonobo_config_set_ulong</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint32">guint32</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-float">bonobo_config_set_float</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gfloat">gfloat</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-double">bonobo_config_set_double</link>            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gdouble">gdouble</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-boolean">bonobo_config_set_boolean</link>           (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gboolean">gboolean</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-char">bonobo_config_set_char</link>              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gchar">gchar</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-config-set-value">bonobo_config_set_value</link>             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-any">CORBA_any</link> *value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libbonobo-bonobo-config-database.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libbonobo-bonobo-config-database.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="bonobo-config-get-string" role="function">
<title>bonobo_config_get_string ()</title>
<indexterm zone="bonobo-config-get-string"><primary sortas="bonobo_config_get_string">bonobo_config_get_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             bonobo_config_get_string            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a string from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database, or zero on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-string-with-default" role="function">
<title>bonobo_config_get_string_with_default ()</title>
<indexterm zone="bonobo-config-get-string-with-default"><primary sortas="bonobo_config_get_string_with_default">bonobo_config_get_string_with_default</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             bonobo_config_get_string_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gchar">gchar</link> *defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-short" role="function">
<title>bonobo_config_get_short ()</title>
<indexterm zone="bonobo-config-get-short"><primary sortas="bonobo_config_get_short">bonobo_config_get_short</primary></indexterm><programlisting><link linkend="gint16">gint16</link>              bonobo_config_get_short             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 16 bit integer from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-short-with-default" role="function">
<title>bonobo_config_get_short_with_default ()</title>
<indexterm zone="bonobo-config-get-short-with-default"><primary sortas="bonobo_config_get_short_with_default">bonobo_config_get_short_with_default</primary></indexterm><programlisting><link linkend="gint16">gint16</link>              bonobo_config_get_short_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint16">gint16</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-ushort" role="function">
<title>bonobo_config_get_ushort ()</title>
<indexterm zone="bonobo-config-get-ushort"><primary sortas="bonobo_config_get_ushort">bonobo_config_get_ushort</primary></indexterm><programlisting><link linkend="guint16">guint16</link>             bonobo_config_get_ushort            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 16 bit unsigned integer from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-ushort-with-default" role="function">
<title>bonobo_config_get_ushort_with_default ()</title>
<indexterm zone="bonobo-config-get-ushort-with-default"><primary sortas="bonobo_config_get_ushort_with_default">bonobo_config_get_ushort_with_default</primary></indexterm><programlisting><link linkend="guint16">guint16</link>             bonobo_config_get_ushort_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint16">guint16</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-long" role="function">
<title>bonobo_config_get_long ()</title>
<indexterm zone="bonobo-config-get-long"><primary sortas="bonobo_config_get_long">bonobo_config_get_long</primary></indexterm><programlisting><link linkend="gint32">gint32</link>              bonobo_config_get_long              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 32 bit integer from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-long-with-default" role="function">
<title>bonobo_config_get_long_with_default ()</title>
<indexterm zone="bonobo-config-get-long-with-default"><primary sortas="bonobo_config_get_long_with_default">bonobo_config_get_long_with_default</primary></indexterm><programlisting><link linkend="gint32">gint32</link>              bonobo_config_get_long_with_default (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint32">gint32</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-ulong" role="function">
<title>bonobo_config_get_ulong ()</title>
<indexterm zone="bonobo-config-get-ulong"><primary sortas="bonobo_config_get_ulong">bonobo_config_get_ulong</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             bonobo_config_get_ulong             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 32 bit unsigned integer from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-ulong-with-default" role="function">
<title>bonobo_config_get_ulong_with_default ()</title>
<indexterm zone="bonobo-config-get-ulong-with-default"><primary sortas="bonobo_config_get_ulong_with_default">bonobo_config_get_ulong_with_default</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             bonobo_config_get_ulong_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint32">guint32</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-float" role="function">
<title>bonobo_config_get_float ()</title>
<indexterm zone="bonobo-config-get-float"><primary sortas="bonobo_config_get_float">bonobo_config_get_float</primary></indexterm><programlisting><link linkend="gfloat">gfloat</link>              bonobo_config_get_float             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a single precision floating point value from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-float-with-default" role="function">
<title>bonobo_config_get_float_with_default ()</title>
<indexterm zone="bonobo-config-get-float-with-default"><primary sortas="bonobo_config_get_float_with_default">bonobo_config_get_float_with_default</primary></indexterm><programlisting><link linkend="gfloat">gfloat</link>              bonobo_config_get_float_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gfloat">gfloat</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-double" role="function">
<title>bonobo_config_get_double ()</title>
<indexterm zone="bonobo-config-get-double"><primary sortas="bonobo_config_get_double">bonobo_config_get_double</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             bonobo_config_get_double            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a double precision floating point value from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-double-with-default" role="function">
<title>bonobo_config_get_double_with_default ()</title>
<indexterm zone="bonobo-config-get-double-with-default"><primary sortas="bonobo_config_get_double_with_default">bonobo_config_get_double_with_default</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             bonobo_config_get_double_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gdouble">gdouble</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-boolean" role="function">
<title>bonobo_config_get_boolean ()</title>
<indexterm zone="bonobo-config-get-boolean"><primary sortas="bonobo_config_get_boolean">bonobo_config_get_boolean</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_config_get_boolean           (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a boolean value from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-boolean-with-default" role="function">
<title>bonobo_config_get_boolean_with_default ()</title>
<indexterm zone="bonobo-config-get-boolean-with-default"><primary sortas="bonobo_config_get_boolean_with_default">bonobo_config_get_boolean_with_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_config_get_boolean_with_default
                                                        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gboolean">gboolean</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-char" role="function">
<title>bonobo_config_get_char ()</title>
<indexterm zone="bonobo-config-get-char"><primary sortas="bonobo_config_get_char">bonobo_config_get_char</primary></indexterm><programlisting><link linkend="gchar">gchar</link>               bonobo_config_get_char              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 8 bit character value from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-char-with-default" role="function">
<title>bonobo_config_get_char_with_default ()</title>
<indexterm zone="bonobo-config-get-char-with-default"><primary sortas="bonobo_config_get_char_with_default">bonobo_config_get_char_with_default</primary></indexterm><programlisting><link linkend="gchar">gchar</link>               bonobo_config_get_char_with_default (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gchar">gchar</link> defval,
                                                         <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>defval</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>def</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-get-value" role="function">
<title>bonobo_config_get_value ()</title>
<indexterm zone="bonobo-config-get-value"><primary sortas="bonobo_config_get_value">bonobo_config_get_value</primary></indexterm><programlisting><link linkend="CORBA-any">CORBA_any</link> *         bonobo_config_get_value             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-TypeCode">CORBA_TypeCode</link> opt_tc,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a value from the configuration database</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_tc</parameter>&#160;:</term>
<listitem><simpara> the type of the value, optional
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the value contained in the database, or zero on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-string" role="function">
<title>bonobo_config_set_string ()</title>
<indexterm zone="bonobo-config-set-string"><primary sortas="bonobo_config_set_string">bonobo_config_set_string</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_string            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a string value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-short" role="function">
<title>bonobo_config_set_short ()</title>
<indexterm zone="bonobo-config-set-short"><primary sortas="bonobo_config_set_short">bonobo_config_set_short</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_short             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint16">gint16</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 16 bit integer value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-ushort" role="function">
<title>bonobo_config_set_ushort ()</title>
<indexterm zone="bonobo-config-set-ushort"><primary sortas="bonobo_config_set_ushort">bonobo_config_set_ushort</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_ushort            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint16">guint16</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 16 bit unsigned integer value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-long" role="function">
<title>bonobo_config_set_long ()</title>
<indexterm zone="bonobo-config-set-long"><primary sortas="bonobo_config_set_long">bonobo_config_set_long</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_long              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gint32">gint32</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 32 bit integer value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-ulong" role="function">
<title>bonobo_config_set_ulong ()</title>
<indexterm zone="bonobo-config-set-ulong"><primary sortas="bonobo_config_set_ulong">bonobo_config_set_ulong</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_ulong             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="guint32">guint32</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 32 bit unsigned integer value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-float" role="function">
<title>bonobo_config_set_float ()</title>
<indexterm zone="bonobo-config-set-float"><primary sortas="bonobo_config_set_float">bonobo_config_set_float</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_float             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gfloat">gfloat</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a single precision floating point value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-double" role="function">
<title>bonobo_config_set_double ()</title>
<indexterm zone="bonobo-config-set-double"><primary sortas="bonobo_config_set_double">bonobo_config_set_double</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_double            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gdouble">gdouble</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a double precision floating point value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-boolean" role="function">
<title>bonobo_config_set_boolean ()</title>
<indexterm zone="bonobo-config-set-boolean"><primary sortas="bonobo_config_set_boolean">bonobo_config_set_boolean</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_boolean           (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gboolean">gboolean</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a boolean value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-char" role="function">
<title>bonobo_config_set_char ()</title>
<indexterm zone="bonobo-config-set-char"><primary sortas="bonobo_config_set_char">bonobo_config_set_char</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_char              (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="gchar">gchar</link> value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 8 bit characte value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-config-set-value" role="function">
<title>bonobo_config_set_value ()</title>
<indexterm zone="bonobo-config-set-value"><primary sortas="bonobo_config_set_value">bonobo_config_set_value</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_config_set_value             (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="CORBA-any">CORBA_any</link> *value,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a value in the configuration database.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>db</parameter>&#160;:</term>
<listitem><simpara> a reference to the database object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> the new value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara> an optional CORBA_Environment to return failure codes
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
