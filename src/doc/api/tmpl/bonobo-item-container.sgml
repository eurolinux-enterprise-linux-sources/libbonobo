<!-- ##### SECTION Title ##### -->
BonoboItemContainer

<!-- ##### SECTION Short_Description ##### -->
this implements a simple container interface for compound document containers

<!-- ##### SECTION Long_Description ##### -->
<para>
This implementation is mostly deprecated, see #BonoboItemHandler
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
   #BonoboItemHandler
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT BonoboItemContainer ##### -->
<para>
Object that implements Bonobo::ItemHandler
</para>


<!-- ##### SIGNAL BonoboItemContainer::get-object ##### -->
<para>
Signal emitted when a sub-object is requested from the item container.
</para>

@bonoboitemcontainer: the object which received the signal.
@arg1: the item name, i.e. the string after the '!' character, usually a semicolon separated list of key=value options
@arg2: the "only_if_exists" flag; if %TRUE, client requests that subobject be returned if it exists, but that it should not be created on demand if it doesn't
@arg3: environment, in case the signal wishes to raise an exception
@Returns: an object contained by the item container, or %CORBA_OBJECT_NIL.

<!-- ##### STRUCT BonoboItemContainerClass ##### -->
<para>
#BonoboItemContainer's class
</para>

@parent_class: 
@epv: 
@get_object: 

<!-- ##### FUNCTION bonobo_item_container_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION bonobo_item_container_add ##### -->
<para>

</para>

@container: 
@name: 
@object: 


<!-- ##### FUNCTION bonobo_item_container_remove_by_name ##### -->
<para>

</para>

@container: 
@name: 


