Significant:

	No effort to keep compatibility with BonoboObject, only
BonoboXObject, thus, poking at elements inside BonoboObject will
fail in future.

C:

bonobo-stream.[ch]:
	converted to BonoboXObject, removed all internals - this
	is totaly obsoleted by BonoboXObject.
		  removed bonobo_stream_get_epv
		  removed bonobo_stream_corba_object_create
	removed bonobo_stream_open
	renamed bonobo_stream_open_full to bonobo_stream_open
	moved bonobo_stream_open into bonobo_storage

bonobo-storage-plugin.[ch]:
	Removed - we use monikers instead now for all storage and stream
	naming and access.

bonobo-storage.[ch]:
	removed bonobo_stream_open
	removed bonobo_storage_open
	removed bonobo_storage_open_full
	Use monikers (bonobo_get_object) instead.
	Remove this nasty chunk of 'wrapper' code obsoleted by
	BonoboObject. Whole API dead - use BonoboObject. Only API
	left is bonobo_storage_copy_to - the only impl. in there.
	NB. return values from openStream, openStorage need their
	own CORBA_Object_duplicate on return.

bonobo-object.[ch]:
	Deprecate in favour of BonoboXObject
		removed bonobo_object_get_epv
		removed bonobo_object_construct
		removed bonobo_object_new_from_servant
		removed bonobo_object_bind_to_servant
		removed bonobo_object_activate_servant
		removed bonobo_object_activate_servant_full
	"query_interface" is a virtual method and no long a signal.
	bonobo_object_query_interface: added optional ev.
	bonobo_unknown_ping: add optional ev.

bonobo-event-source.[ch]
	bonobo_event_source_client_add_listener: no longer returns an id
	use the listener object reference to manage the listener.
	bonobo_event_source_client_add_listener_full: this now returns
	a Bonobo_Listener CORBA reference that you need to _release, but
	can be used to identify the listener - if neccessary [ seldom is ].
	bonobo_event_source_client_remove_listener: similary now takes
	a listener instead of an id.


bonobo-generic-factory.[ch]:
bonobo-shlib-factory.[ch]:
	A very broken module
		removed bonobo_generic_factory_corba_object_create

	Unified multi/simple factories -- every factory is a multi
		factory now. _MULTI macros are provided for
		compatibility but please consider migrating to
		_MULTI-less macros. Migrating simple factories is
		easy: just add a const gchar * argument to your
		factory callback function.
	Privatization
	removed bonobo_generic_factory_set
		
bonobo-property-bag-xml.[ch]:
	Removed, use bonobo-conf or soap support code instead
		 removed bonobo_property_bag_xml_encode_any
		 removed bonobo_property_bag_xml_decode_any

bonobo-main.[ch]:
	bonobo_init: added argc, argv, since this now initializes
	oaf for you.

bonobo-object-client.[ch]:
	totaly removed, was a terrible idea - use the CORBA handle
	directly instead.

bonobo-moniker.[ch]:
	remove specious virtualization of get_parent, set_parent,
	get_name, set_name, resolve, equal. If you need to override
	these then do it by overriding the CORBA method on your
	inherited epv.

bonobo-moniker-util.[ch]:
	Removed bonobo_moniker_client_resolve_client_default: it used
	BonoboObjectClient, use bonobo_moniker_client_resolve_default intead.
	The async methods no longer take a timeout - since we can detect when
	a connection dies, and there's no point.

bonobo-progressive.[ch]:
	Removed entirely - unused & stale.

bonobo-property-bag-client.[ch]
	Added more functions to access property bag data. The new functions are
	named bonobo_bpclient_* instead of bonobo_property_bag_client_*
	Add a bonobo_pbclient_set / bonobo_pbclient_get nice vararg wrapper
	to make it easier to set properties.
	Change the way varrag wrappers work, to be name / type / value
	triplets instead of type-unsafe name / value pairs.

bonobo-property-bag.[ch]:
	bonobo_property_bag_add_gtk_args is now called
	bonobo_property_bag_map_params and changed sig.

bonobo-object-directory.[ch]:
	bonobo_directory_*: remove, deprecated by oaf,
	use the liboaf functions instead.

bonobo-print.[ch],
bonobo-print-client.[ch]:
	These now live in libgnomeprint-bonobo.h and have been renamed
	to the GnomePrintBonobo namespace.

bonobo-arg.[ch]:
	bonobo_arg_from/to_gtk -> bonobo_arg_from/to_gvalue
	bonobo_arg_type_to/from_gtk -> bonobo_arg_type_to/from_gtype



IDL:

Bonobo_Property.idl:
	remove the Property interface and extended the PropertyBag interface
	instead. included the ConfigDatabase interface.

Bonobo_Storage.idl:
	remove copyTo

Bonobo_Persist:
	Promoted isDirty to the base class and removed it from all the 
	subclasses.
	New getIId method to get the OAF IID necessary to re-create the
	component owning the Bonobo::Perist interface

Bonobo_PersistStream:
	remove getMaxSize: use the stream interface for this

Bonobo_PersistStorage:
	remove initNew: use the stream context for this.

Bonobo_Listener:
	remove the 'id' concept on the EventSource - it was badly
	broken and unneccesary.

Bonobo_ClientSite:
Bonobo_Embeddable:
Bonobo_View:
Bonobo_ViewFrame:
	killed: use the new ControlFactory and CanvasComponentFactory
	interfaces to create compound document view objects.  

Bonobo_ControlFactory:
	new: use to expose control based compound-doc view support.

Bonobo_CanvasComponentFactory:
	new: use to expose canvas based compound-doc view support.

Bonobo/ActivationContext:
	renamed to Bonobo/MonikerContext to avoid clash with oaf
	and better reflect it's use.

Removed:
	Bonobo_Advise.idl:          unused,
	Bonobo_ProgressiveDataSink: unused & stale
	Bonobo_DesktopWindow:       deprecated
	


Insignificant:
